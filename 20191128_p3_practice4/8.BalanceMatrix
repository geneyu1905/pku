#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;
int mat[8][8] = { 0 };
int min_of_max = 1000000;
int sum_of_column(int column, int total) //一列数的最大值
{
	int sum = 0;
	for (int i = 0; i < total; i++)
	{
		sum += mat[i][column];
	}
	return sum;
}
void moveLeft(int row,int total) //移去左边
{
	int temp = mat[row][0];
	for (int i = 0; i < total - 1; i++) //把全部往左移一次
	{
		mat[row][i] = mat[row][i + 1];
	}
	mat[row][total - 1] = temp;
}
void opt(int row, int total)
{
	if (row == total)
	{
		return;
	}
	for (int i = 0; i < total; i++)
	{
		moveLeft(row, total);
		int max_of_column = 0;
		for (int k = 0; k < total; k++)
		{
			int temp = sum_of_column(k, total);
			max_of_column = max(max_of_column, temp);
		}
		min_of_max = min(min_of_max, max_of_column);
		opt(row + 1, total);
	}
}

int main()
{
	int n = 0;
	
	while (cin >> n)
	{
		if (n == -1)break;
		min_of_max = 1000000;
		memset(mat, 0, sizeof(mat));
		for (int i = 0; i < n; i++) //输入矩阵
		{
			for (int j = 0; j < n; j++)
			{
				cin >> mat[i][j];
			}
		}
		opt(0, n);
		cout << min_of_max << endl;
	}
}
